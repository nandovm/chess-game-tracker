30/7/19
Sobre capturer:

el capturador funciona separado en un hilo. se encarga de seleccionar imagenes en las que ha cambiado la posicion del tablero
al principio funcionaba lento con compare_ssmi pero al cambiarlo a diferencias por histograma funciona mejor.
para la deteccion de la mano se comparan los valores de la diferencia de histograma, de tal manera que si el valor ha cambiado "demasiado"
significa que en el frame anterior la mano aparece (o desaparece)
Este enfoque trae problemas ya que detecta cambios bruscos aun cuando la mano no ha desaparecido, ya que esta se desplaza verticalmente por el tablero

31/7/19
finalmente el enfoque utilizado consiste en detectar un cambio brusco, que corresponderia a la mano entrando, y esperar hasta que la imagen vuelva a estabilizarse,
siendo muy parecida a la primera, ya que solo una pieza ha cambiado de sitio, mientras que la mano habria desaparecido completamente

Se ha optmizado el codigo de capturer, separando la logica de fitlrado de imagenes en un hilo distinto a la logica de captura. Sigue tardando ya que
imutils.resize() gasta demasiados recursos de procesamiento, siendo de 23 segundos que tarda en procesar el video 20 segundos los que se ocupan en llamadas a imutils.resize()

Sobre processor:

se ha refinado el método que detecta el fondo de una imagen para recortarlo, consiguiendo incluso recortar el borde del tablero. Para la mejora he retirado el filtro bilateral,
ya que hacia que findCountours no encontrara bien los contornos, asi que para el recorte se utilzia la imagem original reescalada y cambiada a blanco negro.

se han vuelto a cambiar canny ratio de 0.5 a 0.33, se han tuneado los parametros occ_thres y sq_offset pero las sombras de las piezas crean demasiados falsos positivos por lo que
el siguiente paso consiste en suavizar o hacer desaparecer las sombras
ademas en la zona de las piezas negras, algunas se confunden con el fondo negro y a la hora de realziar canny no se detectan apenas ejes.
para solucionar esto se ha creado un metodo que recupera una mascara de piezas blancas y otra de piezas negras para resaltar los lpizeles de todas las piezas


sobre dgtchessCore:

se ha pasado la logica de fitlrado desde capturer a dgtchess.py, se han añadido una funcion para realziar pruebas 